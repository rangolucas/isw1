

----QUIT----(13 August 2023 19:14:09) CuisUniversity-5981.image priorSource: 5713367!

----STARTUP---- (13 August 2023 19:14:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5981.image!


----QUIT----(13 August 2023 19:14:10) CuisUniversity-5981.image priorSource: 10197065!

----STARTUP---- (5 October 2023 20:13:46) as /home/bruno/Downloads/linux64(2)/linux64/CuisUniversity-5981.image!


Object subclass: #TestMarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CuisUniversity'!

!classDefinition: #TestMarsRover category: 'CuisUniversity' stamp: 'BR 10/5/2023 20:30:20'!
Object subclass: #TestMarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CuisUniversity'!

!classRemoval: #TestMarsRover stamp: 'BR 10/5/2023 20:30:30'!
Object subclass: #TestMarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CuisUniversity'!

TestCase subclass: #TestMarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #TestMarsRover category: 'MarsRoverExercise' stamp: 'BR 10/5/2023 20:31:00'!
TestCase subclass: #TestMarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #MarsRover category: 'MarsRoverExercise' stamp: 'BR 10/5/2023 20:37:49'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!
!TestMarsRover methodsFor: 'nil' stamp: 'BR 10/5/2023 20:39:24'!
test01MarsRover
	|marsRover|
	
	marsRover := MarsRover new.
	
	self assert: (marsRover currentPosition = 0@0).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 20:40:32' prior: 50650358!
test01MarsRover
	|marsRover|
	
	marsRover := MarsRover new.
	
	self assert: marsRover currentPosition equals: 0@0.! !
!MarsRover methodsFor: 'no messages' stamp: 'BR 10/5/2023 20:40:46'!
currentPosition
	^0@0.! !

!testRun: #TestMarsRover #test01MarsRover stamp: 'BR 10/5/2023 20:40:56'!
PASSED!
!MarsRover class methodsFor: 'nil' stamp: 'BR 10/5/2023 21:06:18'!
deployAt: aPoint facing: aCardinalPoint
	^self new MarsRover with: aPoint with: aCardinalPoint.! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:06:25' prior: 50650377!
deployAt: aPoint facing: aCardinalPoint
	^self new MarsRover with: aPoint and: aCardinalPoint.! !

Object subclass: #NameOfSubclass
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #NameOfSubclass category: 'MarsRoverExercise' stamp: 'BR 10/5/2023 21:07:26'!
Object subclass: #NameOfSubclass
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #NameOfSubclass stamp: 'BR 10/5/2023 21:07:36'!
Object subclass: #NameOfSubclass
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

Object subclass: #MarsRover
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #MarsRover category: 'MarsRoverExercise' stamp: 'BR 10/5/2023 21:07:46'!
Object subclass: #MarsRover
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:08:31'!
with: aPoint facing: aCardinalPoint
	position := aPoint.
	facing := aCardinalPoint.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:09:24'!
isAt: aPoint facing: aCardinalPoint
	position := aPoint.
	facing := aCardinalPoint.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:09:43' prior: 50650428!
isAt: aPoint facing: aCardinalPoint
	(position := aPoint) and: (facing = aCardinalPoint).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:13:54' prior: 50650365!
test01MarsRover
	|marsRover aPoint aCardinalPoint|
	
	aPoint := 0@0.
	aCardinalPoint:= 'N'.
	marsRover := MarsRover deployAt: aPoint facing: aCardinalPoint.
	
	self assert: marsRover currentPosition equals: 0@0.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:14:44' prior: 50650440!
test01MarsRover
	|marsRover aPoint aCardinalPoint|
	
	aPoint := 0@0.
	aCardinalPoint:= 'N'.
	marsRover := MarsRover deployAt: aPoint facing: aCardinalPoint.
	
	self assert: (marsRover isAt: 0@0 facing: 'N').! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:14:54' prior: 50650434!
isAt: aPoint facing: aCardinalPoint
	(position = aPoint) and: (facing = aCardinalPoint).! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:15:04' prior: 50650460!
isAt: aPoint facing: aCardinalPoint
	^(position = aPoint) and: (facing = aCardinalPoint).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:21:55' prior: 50650450!
test01MarsRover
	|marsRover aPoint aCardinalPoint|
	
	aPoint := 0@0.
	aCardinalPoint:= #North.
	marsRover := MarsRover deployAt: aPoint facing: aCardinalPoint.
	
	self assert: (marsRover isAt: 0@0 facing: #North).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:27:00'!
test02MarsRoverProcessEmptyCommand
	|marsRover aPoint aCardinalPoint command|
	
	aPoint := 0@0.
	aCardinalPoint:= #North.
	marsRover := MarsRover deployAt: aPoint facing: aCardinalPoint.
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 facing: #North).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:28:30'!
test01MarsRoverProcessEmptyCommand
	|marsRover aPoint aCardinalPoint command|
	
	aPoint := 0@0.
	aCardinalPoint:= #North.
	marsRover := MarsRover deployAt: aPoint facing: aCardinalPoint.
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 facing: #North).! !

!methodRemoval: TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:29:13'!
test02MarsRoverProcessEmptyCommand
	|marsRover aPoint aCardinalPoint command|
	
	aPoint := 0@0.
	aCardinalPoint:= #North.
	marsRover := MarsRover deployAt: aPoint facing: aCardinalPoint.
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 facing: #North).!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:29:26'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:29:26'!
ERROR!
!MarsRover methodsFor: 'processing' stamp: 'BR 10/5/2023 21:30:05'!
MarsRover
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'processing' stamp: 'BR 10/5/2023 21:30:50'!
process: aCommand
	self shouldBeImplemented.! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:30:54'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:30:54'!
ERROR!

!methodRemoval: MarsRover #MarsRover stamp: 'BR 10/5/2023 21:31:06'!
MarsRover
	self shouldBeImplemented.!
!MarsRover methodsFor: 'processing' stamp: 'BR 10/5/2023 21:31:15' prior: 50650527!
process: aCommand
	^self.! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:31:19'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:31:19'!
ERROR!
!MarsRover methodsFor: 'processing' stamp: 'BR 10/5/2023 21:31:37'!
processCommand: aCommand
	^self.! !

!methodRemoval: MarsRover #process: stamp: 'BR 10/5/2023 21:31:41'!
process: aCommand
	^self.!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:31:44'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:31:44'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:32:07'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:32:07'!
ERROR!
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:32:29' prior: 50650384!
deployAt: aPoint facing: aCardinalPoint
	^MarsRover new with: aPoint and: aCardinalPoint.! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:32:34'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:32:34'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:33:04'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:33:04'!
ERROR!
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:33:19' prior: 50650571!
deployAt: aPoint facing: aCardinalPoint
	^MarsRover new with: aPoint facing: aCardinalPoint.! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:33:25'!
PASSED!

!methodRemoval: TestMarsRover #test01MarsRover stamp: 'BR 10/5/2023 21:39:42'!
test01MarsRover
	|marsRover aPoint aCardinalPoint|
	
	aPoint := 0@0.
	aCardinalPoint:= #North.
	marsRover := MarsRover deployAt: aPoint facing: aCardinalPoint.
	
	self assert: (marsRover isAt: 0@0 facing: #North).!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:41:12'!
test02MarsRoverProcessEmptyCommand
	|marsRover aPoint aCardinalPoint command|
	
	aPoint := 0@0.
	aCardinalPoint:= #North.
	marsRover := MarsRover deployAt: aPoint facing: aCardinalPoint.
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 facing: #North).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:41:23' prior: 50650608!
test02MarsRoverProcessEmptyCommand
	|marsRover aPoint aCardinalPoint|
	
	aPoint := 0@0.
	aCardinalPoint:= #North.
	marsRover := MarsRover deployAt: aPoint facing: aCardinalPoint.
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 facing: #North).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:41:26' prior: 50650494!
test01MarsRoverProcessEmptyCommand
	|marsRover aPoint aCardinalPoint|
	
	aPoint := 0@0.
	aCardinalPoint:= #North.
	marsRover := MarsRover deployAt: aPoint facing: aCardinalPoint.
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 facing: #North).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:41:43' prior: 50650620!
test02MarsRoverProcessEmptyCommand
	|marsRover |
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 facing: #North).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:41:50' prior: 50650644!
test02MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 facing: #North).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:41:55' prior: 50650654!
test02MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 0@0 facing: #North).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:41:59' prior: 50650664!
test02MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 1@0 facing: #North).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:42:05' prior: 50650674!
test02MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: #North).! !

!testRun: #TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:42:16'!
FAILURE!

!testRun: #TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:42:16'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'BR 10/5/2023 21:44:28' prior: 50650551!
processCommand: aCommand
	
	(aCommand = 'f') ifTrue: [position := position + 0@1.].! !

!testRun: #TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:44:42'!
ERROR!

!testRun: #TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:44:42'!
ERROR!

0@0 + 1@0!
!MarsRover methodsFor: 'processing' stamp: 'BR 10/5/2023 21:46:00' prior: 50650700!
processCommand: aCommand
	
	(aCommand = 'f') ifTrue: [position := (position x+ 0)@(position y + 1).].! !
!MarsRover methodsFor: 'processing' stamp: 'BR 10/5/2023 21:46:07' prior: 50650713!
processCommand: aCommand
	
	(aCommand = 'f') ifTrue: [position := (position x + 0)@(position y + 1).].! !

!testRun: #TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:46:09'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:46:17'!
test03MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: #North).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:46:24' prior: 50650729!
test03MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: 'b'.
	
	self assert: (marsRover isAt: 0@1 facing: #North).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:46:39' prior: 50650739!
test03MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: 'b'.
	
	self assert: (marsRover isAt: 0@-1 facing: #North).! !
!MarsRover methodsFor: 'processing' stamp: 'BR 10/5/2023 21:47:12' prior: 50650719!
processCommand: aCommand
	
	(aCommand = 'f') ifTrue: [position := (position x + 0)@(position y + 1).].
	(aCommand = 'b') ifTrue: [position := (position x + 0)@(position y - 1).].	! !

!testRun: #TestMarsRover #test03MarsRoverProcessEmptyCommand stamp: 'BR 10/5/2023 21:47:17'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/5/2023 21:47:30'!
test04MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@-1 facing: #North).! !
!MarsRover methodsFor: 'processing' stamp: 'BR 10/5/2023 21:50:20' prior: 50650758!
processCommand: aCommand
	
	(aCommand = 'f') ifTrue: [position := (position x + 0)@(position y + 1).].
	(aCommand = 'b') ifTrue: [position := (position x + 0)@(position y - 1).].	
	! !

----STARTUP---- (8 October 2023 00:44:39) as /home/bruno/Downloads/linux64(2)/linux64/CuisUniversity-5981.image!


----End fileIn of /home/bruno/Downloads/linux64(2)/linux64/MarsRoverExercise.st----!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 00:46:48' prior: 50650384!
currentPosition
	^position.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 00:47:41' prior: 50650334!
test01MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 facing: #North).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 00:50:08' prior: 50650363!
test04MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: #West).! !

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 00:50:11'!
FAILURE!

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 00:50:11'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'BR 10/8/2023 00:51:32' prior: 50650399!
processCommand: aCommand
	
	(aCommand = 'f') ifTrue: [position := (position x + 0)@(position y + 1).].
	(aCommand = 'b') ifTrue: [position := (position x + 0)@(position y - 1).].	
	(aCommand = 'l') ifTrue: [
			(facing = #North) ifTrue: facing = #West.
		]
	! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 00:51:49'!
test05MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: #West).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 00:52:06' prior: 50650466!
test05MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #West.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: #South).! !

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 00:52:17'!
FAILURE!

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 00:52:17'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'BR 10/8/2023 00:53:10' prior: 50650455!
processCommand: aCommand
	
	(aCommand = 'f') ifTrue: [position := (position x + 0)@(position y + 1).].
	(aCommand = 'b') ifTrue: [position := (position x + 0)@(position y - 1).].	
	(aCommand = 'l') ifTrue: [
			(facing = #North) ifTrue: [facing := #West.].
		]
	! !

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 00:53:17'!
PASSED!
!MarsRover methodsFor: 'processing' stamp: 'BR 10/8/2023 00:56:42' prior: 50650492!
processCommand: aCommand
	
	(aCommand = 'f') ifTrue: [position := (position x + 0)@(position y + 1).].
	(aCommand = 'b') ifTrue: [position := (position x + 0)@(position y - 1).].	
	(aCommand = 'l') ifTrue: [
			(facing = #North) ifTrue: [facing := #West.].
			(facing = #West) ifTrue: [facing := #South.].
		]
	! !

!testRun: #TestMarsRover #test05MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 00:56:49'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 00:59:23'!
test06MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #West.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: #South).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 00:59:38'!
test06MarsRoverProcessErroneousCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #West.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: #South).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 00:59:48' prior: 50650532!
test06MarsRoverProcessErroneousCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: #South).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 01:00:08' prior: 50650542!
test06MarsRoverProcessErroneousCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: 'x'.
	
	self assert: (marsRover isAt: 0@0 facing: #South).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 01:00:16' prior: 50650552!
test06MarsRoverProcessErroneousCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #North.
	marsRover processCommand: 'x'.
	
	self assert: (marsRover isAt: 0@0 facing: #North).! !

!methodRemoval: TestMarsRover #test06MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 01:00:46'!
test06MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: #West.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: #South).!

Object subclass: #Command
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #Command category: 'MarsRoverExercise' stamp: 'BR 10/8/2023 01:52:45'!
Object subclass: #Command
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!
!MarsRover methodsFor: 'processing' stamp: 'BR 10/8/2023 01:54:01' prior: 50650507!
processCommand: aCommand
	
	aCommand isSentTo: self.
	! !
!Command methodsFor: 'nil' stamp: 'BR 10/8/2023 01:54:33'!
isSentTo: aMarsRover
	(self = 'f') ifTrue: [position := (position x + 0)@(position y + 1).].
	(self = 'b') ifTrue: [position := (position x + 0)@(position y - 1).].	
	(self = 'l') ifTrue: [
			(facing = #North) ifTrue: [facing := #West.].
			(facing = #West) ifTrue: [facing := #South.].
		]! !

Command subclass: #ForwardCommand
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRenamed: #Command as: #CommandBase stamp: 'BR 10/8/2023 01:55:40'!
Smalltalk renameClassNamed: #Command as: #CommandBase!
!Utilities class methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 01:55:40' prior: 16976779!
garbageCollectAndReport
	"Do a garbage collection, and report results to the user."
	| cc reportString |
	reportString _ String streamContents: [ :aStream |
		aStream nextPutAll: Smalltalk bytesLeftString.
		Smalltalk
			at: #CommandBase
			ifPresent: [ :cmdClass |
				(cc _ cmdClass instanceCount) > 0 ifTrue: [
					aStream
						 newLine;
						 nextPutAll: '(note: there are ' , cc printString , ' undo record(s) present in your
system; purging them may free up more space.)' ]]].
	self inform: reportString! !

CommandBase subclass: #CommandForward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #CommandForward category: 'MarsRoverExercise' stamp: 'BR 10/8/2023 01:56:01'!
CommandBase subclass: #CommandForward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

Object subclass: #CommandBase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #CommandBase category: 'MarsRoverExercise' stamp: 'BR 10/8/2023 01:56:07'!
Object subclass: #CommandBase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

CommandBase subclass: #CommandBackward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #CommandBackward category: 'MarsRoverExercise' stamp: 'BR 10/8/2023 01:56:13'!
CommandBase subclass: #CommandBackward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

CommandBase subclass: #CommandLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #CommandLeft category: 'MarsRoverExercise' stamp: 'BR 10/8/2023 01:56:18'!
CommandBase subclass: #CommandLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

CommandBase subclass: #CommandRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #CommandRight category: 'MarsRoverExercise' stamp: 'BR 10/8/2023 01:56:21'!
CommandBase subclass: #CommandRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!
!CommandForward methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 01:57:29' overrides: 50650596!
isSentTo: aMarsRover
	(self = 'f') ifTrue: [position := (position x + 0)@(position y + 1).].
	(self = 'b') ifTrue: [position := (position x + 0)@(position y - 1).].	
	(self = 'l') ifTrue: [
			(facing = #North) ifTrue: [facing := #West.].
			(facing = #West) ifTrue: [facing := #South.].
		]! !
!CommandBackward methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 01:57:29' overrides: 50650596!
isSentTo: aMarsRover
	(self = 'f') ifTrue: [position := (position x + 0)@(position y + 1).].
	(self = 'b') ifTrue: [position := (position x + 0)@(position y - 1).].	
	(self = 'l') ifTrue: [
			(facing = #North) ifTrue: [facing := #West.].
			(facing = #West) ifTrue: [facing := #South.].
		]! !
!CommandLeft methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 01:57:29' overrides: 50650596!
isSentTo: aMarsRover
	(self = 'f') ifTrue: [position := (position x + 0)@(position y + 1).].
	(self = 'b') ifTrue: [position := (position x + 0)@(position y - 1).].	
	(self = 'l') ifTrue: [
			(facing = #North) ifTrue: [facing := #West.].
			(facing = #West) ifTrue: [facing := #South.].
		]! !
!CommandRight methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 01:57:29' overrides: 50650596!
isSentTo: aMarsRover
	(self = 'f') ifTrue: [position := (position x + 0)@(position y + 1).].
	(self = 'b') ifTrue: [position := (position x + 0)@(position y - 1).].	
	(self = 'l') ifTrue: [
			(facing = #North) ifTrue: [facing := #West.].
			(facing = #West) ifTrue: [facing := #South.].
		]! !
!CommandBase methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 01:57:29' prior: 50650596!
isSentTo: aMarsRover

	self subclassResponsibility! !
!CommandBackward methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 01:57:48' prior: 50650710 overrides: 50650749!
isSentTo: aMarsRover
	
	aMarsRover moveBackwards.! !
!CommandForward methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 01:58:05' prior: 50650697 overrides: 50650749!
isSentTo: aMarsRover
	
	aMarsRover moveForwards.! !
!CommandLeft methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 01:58:33' prior: 50650723 overrides: 50650749!
isSentTo: aMarsRover
	
	aMarsRover rotateLeft.! !
!CommandRight methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 01:58:53' prior: 50650736 overrides: 50650749!
isSentTo: aMarsRover
	
	aMarsRover rotateRight.! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 01:59:45'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 01:59:45'!
ERROR!
!CommandBase class methodsFor: 'nil' stamp: 'BR 10/8/2023 02:06:49'!
commandParse: aCommandCharacter
	(aCommandCharacter = 'f') ifTrue: [^CommandForward new.].
	(aCommandCharacter = 'b') ifTrue: [^CommandBackward new.].
	(aCommandCharacter = 'f') ifTrue: [^CommandLeft new.].
	(aCommandCharacter = 'f') ifTrue: [^CommandRight new.].! !
!CommandBase class methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 02:06:57' prior: 50650784!
commandParse: aCommandCharacter
	(aCommandCharacter = 'f') ifTrue: [^CommandForward new.].
	(aCommandCharacter = 'b') ifTrue: [^CommandBackward new.].
	(aCommandCharacter = 'l') ifTrue: [^CommandLeft new.].
	(aCommandCharacter = 'r') ifTrue: [^CommandRight new.].! !
!MarsRover methodsFor: 'processing' stamp: 'BR 10/8/2023 02:07:51' prior: 50650592!
processCommand: aCommand
	
	(CommandBase commandParse: aCommand) isSentTo: self.
	! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:07:56'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:07:56'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:09:38'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:09:38'!
ERROR!

CommandBase subclass: #CommandNotRecognized
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #CommandNotRecognized category: 'MarsRoverExercise' stamp: 'BR 10/8/2023 02:11:20'!
CommandBase subclass: #CommandNotRecognized
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!
!CommandNotRecognized methodsFor: 'nil' stamp: 'BR 10/8/2023 02:11:53' overrides: 50650749!
isSentTo: aMarsRover
	^self.! !
!CommandBase class methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 02:12:19' prior: 50650796!
commandParse: aCommandCharacter
	(aCommandCharacter = 'f') ifTrue: [^CommandForward new.].
	(aCommandCharacter = 'b') ifTrue: [^CommandBackward new.].
	(aCommandCharacter = 'l') ifTrue: [^CommandLeft new.].
	(aCommandCharacter = 'r') ifTrue: [^CommandRight new.].
	^CommandNotRecognized new.! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:12:31'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:12:36'!
ERROR!

!testRun: #TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:12:36'!
ERROR!

!testRun: #TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:13:32'!
ERROR!

!testRun: #TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:13:32'!
ERROR!
!MarsRover methodsFor: 'movement' stamp: 'BR 10/8/2023 02:14:00'!
moveForwards
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/8/2023 02:14:44' prior: 50650871!
moveForwards
	position := position + (0@1).! !

!testRun: #TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:14:49'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:14:54'!
ERROR!

!testRun: #TestMarsRover #test03MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:14:54'!
ERROR!
!MarsRover methodsFor: 'movement' stamp: 'BR 10/8/2023 02:15:01'!
moveBackwards
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/8/2023 02:15:33' prior: 50650889!
moveBackwards
	position := position + (0@-1).! !

!testRun: #TestMarsRover #test03MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:15:37'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:15:46'!
ERROR!

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:15:46'!
ERROR!
!MarsRover methodsFor: 'movement' stamp: 'BR 10/8/2023 02:15:52'!
rotateLeft
	self shouldBeImplemented.! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/8/2023 02:16:52' prior: 50650907!
rotateLeft
	(facing = #North) ifTrue: [facing := #West.].! !

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:17:02'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:17:05'!
FAILURE!

!testRun: #TestMarsRover #test05MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:17:05'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'BR 10/8/2023 02:17:49' prior: 50650911!
rotateLeft
	(facing = #North) ifTrue: [facing := #West.].
	(facing = #West) ifTrue: [facing := #South.].! !

!testRun: #TestMarsRover #test05MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 02:17:53'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'BR 10/8/2023 02:17:59'!
PASSED!

----SNAPSHOT----(8 October 2023 02:18:48) CuisUniversity-5981.image priorSource: 10197292!

----QUIT----(8 October 2023 02:19:15) CuisUniversity-5981.image priorSource: 10217211!

----STARTUP---- (8 October 2023 19:13:00) as /Users/lucas.rango/workspace/cuisUniversity/CuisUniversity-5981.image!


----End fileIn of /Users/lucas.rango/workspace/fceyn/isw1/05-MarsRover/MarsRoverExercise.st----!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:38:30'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:38:30'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:38:30'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:38:30'!
FAILURE!

!testRun: #TestMarsRover #test05MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:38:30'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 19:38:30'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:38:30'!
FAILURE!

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:41:21'!
FAILURE!

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:41:21'!
FAILURE!

marsRover isAt: 0@0 facing: #West!

marsRover isAt: 0@0 facing: #North!

marsRover isAt: 0@0 facing: #South!
!MarsRover methodsFor: 'movement' stamp: 'LR 10/8/2023 19:44:46' prior: 50651177!
rotateLeft
	(facing = #North) ifTrue: [
		facing := #West
	] ifFalse: [	
		(facing = #West) ifTrue: [
			facing := #South
		]
	]! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:44:50'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:44:50'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:44:50'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:44:50'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:44:50'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 19:44:50'!
PASSED!

Object subclass: #Orientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #Orientation category: 'MarsRoverExercise' stamp: 'LR 10/8/2023 19:46:04'!
Object subclass: #Orientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

Orientation subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #North category: 'MarsRoverExercise' stamp: 'LR 10/8/2023 19:46:26'!
Orientation subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

Orientation subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #West category: 'MarsRoverExercise' stamp: 'LR 10/8/2023 19:46:29'!
Orientation subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

Orientation subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #South category: 'MarsRoverExercise' stamp: 'LR 10/8/2023 19:46:35'!
Orientation subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!
!Orientation methodsFor: 'no messages' stamp: 'LR 10/8/2023 19:46:56'!
rotateLeft
	^self subclassResponsibility ! !
!Orientation methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 19:47:00'!
rotateRight
	^self subclassResponsibility ! !
!North methodsFor: 'no messages' stamp: 'LR 10/8/2023 19:47:44' overrides: 50651303!
rotateLeft
	^Orientation west! !
!Orientation class methodsFor: 'no messages' stamp: 'LR 10/8/2023 19:48:11'!
west
	! !

Days!

Days!

Days!

Orientation class
	instanceVariableNames: 'north west south'!

!classDefinition: 'Orientation class' category: 'MarsRoverExercise' stamp: 'LR 10/8/2023 19:52:33'!
Orientation class
	instanceVariableNames: 'north west south'!
!Orientation class methodsFor: 'nil' stamp: 'LR 10/8/2023 19:53:36' overrides: 16904184!
initialize
	north := North new.
	south := South new.
	west := West new.
	! !
!Orientation class methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 19:54:36' prior: 50651316!
west
	^west! !
!Orientation class methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 19:54:47'!
north
	^north! !
!Orientation class methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 19:54:54'!
south
	^south! !
!West methodsFor: 'nil' stamp: 'LR 10/8/2023 19:55:39' overrides: 50651303!
rotateLeft
	^Orientation south! !

TestCase subclass: #TestMarsRover
	instanceVariableNames: 'north south west'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #TestMarsRover category: 'MarsRoverExercise' stamp: 'LR 10/8/2023 19:56:29'!
TestCase subclass: #TestMarsRover
	instanceVariableNames: 'north south west'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 19:56:54' overrides: 16920235!
initialize
	north := Orientation north.
	south := Orientation south.
	west := Orientation west.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 19:57:04' prior: 50650960!
test01MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:57:08'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 19:57:16' prior: 50650969!
test02MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: north).! !

!testRun: #TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:57:17'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 19:57:25' prior: 50650978!
test03MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'b'.
	
	self assert: (marsRover isAt: 0@-1 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 19:57:32' prior: 50650987!
test04MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: west).! !

!testRun: #TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:57:34'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 19:57:42' prior: 50650996!
test05MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: west.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: south).! !

!testRun: #TestMarsRover #test05MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 19:57:43'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 19:57:53' prior: 50651005!
test06MarsRoverProcessErroneousCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'x'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 19:57:54'!
PASSED!

----STARTUP---- (8 October 2023 20:05:56) as /Users/lucas.rango/workspace/cuisUniversity/CuisUniversity-5981.image!


----End fileIn of /Users/lucas.rango/workspace/fceyn/isw1/05-MarsRover/MarsRoverExercise.st----!

!classRenamed: #CommandBase as: #MarsRoverCommand stamp: 'LR 10/8/2023 20:06:29'!
Smalltalk renameClassNamed: #CommandBase as: #MarsRoverCommand!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:06:29' prior: 50651668!
processCommand: aCommand
	
	(MarsRoverCommand commandParse: aCommand) isSentTo: self.
	! !

!classRenamed: #CommandBackward as: #MoveBackwardsCommand stamp: 'LR 10/8/2023 20:06:48'!
Smalltalk renameClassNamed: #CommandBackward as: #MoveBackwardsCommand!
!MarsRoverCommand class methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:06:48' prior: 50651543!
commandParse: aCommandCharacter
	(aCommandCharacter = 'f') ifTrue: [^CommandForward new.].
	(aCommandCharacter = 'b') ifTrue: [^MoveBackwardsCommand new.].
	(aCommandCharacter = 'l') ifTrue: [^CommandLeft new.].
	(aCommandCharacter = 'r') ifTrue: [^CommandRight new.].
	^CommandNotRecognized new.! !

!classRenamed: #CommandForward as: #MoveForwardsCommand stamp: 'LR 10/8/2023 20:06:59'!
Smalltalk renameClassNamed: #CommandForward as: #MoveForwardsCommand!
!MarsRoverCommand class methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:07:00' prior: 50651812!
commandParse: aCommandCharacter
	(aCommandCharacter = 'f') ifTrue: [^MoveForwardsCommand new.].
	(aCommandCharacter = 'b') ifTrue: [^MoveBackwardsCommand new.].
	(aCommandCharacter = 'l') ifTrue: [^CommandLeft new.].
	(aCommandCharacter = 'r') ifTrue: [^CommandRight new.].
	^CommandNotRecognized new.! !

!classRenamed: #CommandLeft as: #RotateLeftCommand stamp: 'LR 10/8/2023 20:07:13'!
Smalltalk renameClassNamed: #CommandLeft as: #RotateLeftCommand!
!MarsRoverCommand class methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:07:13' prior: 50651830!
commandParse: aCommandCharacter
	(aCommandCharacter = 'f') ifTrue: [^MoveForwardsCommand new.].
	(aCommandCharacter = 'b') ifTrue: [^MoveBackwardsCommand new.].
	(aCommandCharacter = 'l') ifTrue: [^RotateLeftCommand new.].
	(aCommandCharacter = 'r') ifTrue: [^CommandRight new.].
	^CommandNotRecognized new.! !

!classRenamed: #CommandRight as: #RotateRightCommand stamp: 'LR 10/8/2023 20:07:38'!
Smalltalk renameClassNamed: #CommandRight as: #RotateRightCommand!
!MarsRoverCommand class methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:07:38' prior: 50651848!
commandParse: aCommandCharacter
	(aCommandCharacter = 'f') ifTrue: [^MoveForwardsCommand new.].
	(aCommandCharacter = 'b') ifTrue: [^MoveBackwardsCommand new.].
	(aCommandCharacter = 'l') ifTrue: [^RotateLeftCommand new.].
	(aCommandCharacter = 'r') ifTrue: [^RotateRightCommand new.].
	^CommandNotRecognized new.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:07:59'!
test02MarsRoverProcessMoveForwardsCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: north).! !

!methodRemoval: TestMarsRover #test02MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:07:59'!
test02MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: north).!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:08:06'!
test03MarsRoverProcessMoveBackwardsCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'b'.
	
	self assert: (marsRover isAt: 0@-1 facing: north).! !

!methodRemoval: TestMarsRover #test03MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:08:06'!
test03MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'b'.
	
	self assert: (marsRover isAt: 0@-1 facing: north).!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:08:16'!
test04MarsRoverProcessRotateLeftCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: west).! !

!methodRemoval: TestMarsRover #test04MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:08:16'!
test04MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: west).!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:08:31'!
test05MarsRoverProcessRotateLeftCommandWhenFacingWest
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: west.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: south).! !

!methodRemoval: TestMarsRover #test05MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:08:31'!
test05MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: west.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: south).!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:08:37'!
test04MarsRoverProcessRotateLeftCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: west).! !

!methodRemoval: TestMarsRover #test04MarsRoverProcessRotateLeftCommand stamp: 'LR 10/8/2023 20:08:37'!
test04MarsRoverProcessRotateLeftCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: west).!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:10:36'!
test06MarsRoverProcessRotateLeftCommandWhenFacingSouth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: west.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: south).! !

!classDefinition: #TestMarsRover category: 'MarsRoverExercise' stamp: 'LR 10/8/2023 20:10:49'!
TestCase subclass: #TestMarsRover
	instanceVariableNames: 'north south west east'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:10:43' prior: 50651971!
test06MarsRoverProcessRotateLeftCommandWhenFacingSouth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: south.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: east).! !

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:10:57'!
FAILURE!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:10:57'!
FAILURE!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:11:14' prior: 50651459 overrides: 16920235!
initialize
	north := Orientation north.
	south := Orientation south.
	west := Orientation west.
	east := Orientation east.! !
!Orientation class methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:11:25'!
east
	self shouldBeImplemented.! !

Orientation subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #East category: 'MarsRoverExercise' stamp: 'LR 10/8/2023 20:11:37'!
Orientation subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: 'Orientation class' category: 'MarsRoverExercise' stamp: 'LR 10/8/2023 20:11:48'!
Orientation class
	instanceVariableNames: 'south west north east'!
!Orientation class methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:11:45' prior: 50651731 overrides: 16904184!
initialize
	north := North new.
	south := South new.
	west := West new.
	east := East new.
	! !
!South class methodsFor: 'nil' stamp: 'LR 10/8/2023 20:12:10'!
rotateLeft
	^Orientation east.! !
!South class methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:12:13' prior: 50652041!
rotateLeft
	^Orientation east! !
!Orientation class methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:12:30' prior: 50652014!
east
	^east! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:12:32'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:12:32'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:12:32'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:12:32'!
FAILURE!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:12:32'!
FAILURE!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:12:32'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:12:32'!
FAILURE!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:12:43'!
FAILURE!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:12:43'!
FAILURE!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:13:01'!
FAILURE!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:13:01'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'LR 10/8/2023 20:14:10' prior: 50651681!
rotateLeft
	facing := facing rotateLeft! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:14:14'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:14:14'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:14:14'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:14:14'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:14:14'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:14:14'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:14:14'!
ERROR!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:14:14'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:14:44'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:14:44'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:14:44'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:14:44'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:14:44'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:14:44'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:14:44'!
ERROR!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:14:44'!
ERROR!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:15:14'!
PASSED!
!South methodsFor: 'nil' stamp: 'LR 10/8/2023 20:15:31' overrides: 50651713!
rotateLeft
	^Orientation east! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:15:34'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:15:34'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:15:34'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:15:34'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:15:34'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:15:34'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:15:34'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:15:46'!
test06MarsRoverProcessRotateLeftCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: south.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: east).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:15:55' prior: 50652189!
test06MarsRoverProcessRotateLeftCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: east.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:16:03'!
test07MarsRoverProcessRotateLeftCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: east.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !

!methodRemoval: TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:16:03'!
test06MarsRoverProcessRotateLeftCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: east.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: north).!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:16:05'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:16:05'!
ERROR!
!East methodsFor: 'nil' stamp: 'LR 10/8/2023 20:16:18' overrides: 50651713!
rotateLeft
	^Orientation north! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:16:20'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:16:20'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:16:20'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:16:20'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:16:20'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:16:20'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:16:20'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:16:20'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:16:20'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:16:30'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:16:30'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:16:30'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:16:30'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:16:30'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:16:30'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:16:30'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:16:30'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:16:30'!
ERROR!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:16:35'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:16:35'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:16:35'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:16:35'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:16:35'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:16:35'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:16:35'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:16:35'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:16:35'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:16:48'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:16:48'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:17:30'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:17:30'!
ERROR!

east!

north!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:18:42'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:18:42'!
ERROR!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:19:05' prior: 50652209!
test07MarsRoverProcessRotateLeftCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: Orientation east.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:19:06'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:19:06'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:19:53'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:19:53'!
ERROR!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:19:59' prior: 50652360!
test07MarsRoverProcessRotateLeftCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: East new.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:20:00'!
PASSED!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:20:30'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:20:30'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:20:30'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:20:30'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:20:30'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:20:30'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:20:30'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:20:30'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:20:43' prior: 50652385!
test07MarsRoverProcessRotateLeftCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: Orientation east.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:20:45'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:20:45'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:20:50'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:20:50'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:21:01'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:21:01'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:21:25'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:21:25'!
ERROR!

Orientation east!
!Orientation class methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:23:05'!
zeast
	^east! !

!methodRemoval: Orientation class #east stamp: 'LR 10/8/2023 20:23:05'!
east
	^east!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:23:15' prior: 50652427!
test07MarsRoverProcessRotateLeftCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: Orientation zeast.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:23:36' prior: 50652007 overrides: 16920235!
initialize
	north := Orientation north.
	south := Orientation south.
	west := Orientation west.
	east := Orientation zeast.! !

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:23:39'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:23:39'!
ERROR!
!Orientation class methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:23:56'!
east
	^east! !

!methodRemoval: Orientation class #zeast stamp: 'LR 10/8/2023 20:23:56'!
zeast
	^east!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:24:46' prior: 50652486 overrides: 16920235!
initialize
	north := Orientation north.
	south := Orientation south.
	west := Orientation west.
	east := Orientation east.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:24:50' prior: 50652475!
test07MarsRoverProcessRotateLeftCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: Orientation east.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:24:51'!
ERROR!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:24:51'!
ERROR!

Orientation initialize east!

Orientation east!

Orientation east!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:25:25'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:25:57' prior: 50652515!
test07MarsRoverProcessRotateLeftCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: east.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:25:58'!
PASSED!

----STARTUP---- (8 October 2023 20:26:12) as /Users/lucas.rango/workspace/cuisUniversity/CuisUniversity-5981.image!


----End fileIn of /Users/lucas.rango/workspace/cuisUniversity/MarsRoverExercise.st----!

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:26:36'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:26:36'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:26:36'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:26:36'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:26:36'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:26:36'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:26:36'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:26:36'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:26:58'!
test07MarsRoverProcessRotateRightCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: east).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:27:10'!
test08MarsRoverProcessRotateRightCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: east).! !

!methodRemoval: TestMarsRover #test07MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:27:10'!
test07MarsRoverProcessRotateRightCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: east).!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:27:13'!
FAILURE!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:27:13'!
FAILURE!
!North methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:27:27' overrides: 50652855!
rotateRight
	^Orientation south! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:27:29'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:27:29'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:27:29'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:27:29'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:27:29'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:27:29'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:27:29'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:27:29'!
PASSED!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:27:29'!
FAILURE!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:27:29'!
FAILURE!
!North methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:27:45' prior: 50653034 overrides: 50652855!
rotateRight
	^Orientation east! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:27:46'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:27:46'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:27:46'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:27:46'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:27:46'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:27:46'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:27:46'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:27:46'!
PASSED!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:27:46'!
FAILURE!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:27:46'!
FAILURE!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:27:56'!
FAILURE!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:27:56'!
FAILURE!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:28:06' prior: 50653006!
test08MarsRoverProcessRotateRightCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: east).! !

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:28:09'!
ERROR!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:28:09'!
ERROR!
!MarsRover methodsFor: 'movement' stamp: 'LR 10/8/2023 20:28:31'!
rotateRight
	facing := facing rotateRight! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:28:34'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:28:34'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:28:34'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:28:34'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:28:34'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:28:34'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:28:34'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:28:34'!
PASSED!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:28:34'!
PASSED!

!classDefinition: #MarsRover category: 'MarsRoverExercise' stamp: 'LR 10/8/2023 20:28:50'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:28:50' prior: 50652675!
with: aPoint facing: aCardinalPoint
	position := aPoint.
	orientation := aCardinalPoint.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:28:50' prior: 50652669!
isAt: aPoint facing: aCardinalPoint
	^(position = aPoint) and: (orientation = aCardinalPoint).! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:28:50' prior: 50652693!
rotateLeft
	orientation := orientation rotateLeft! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:28:50' prior: 50653141!
rotateRight
	orientation := orientation rotateRight! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:28:54'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:28:54'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:28:54'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:28:54'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:28:54'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:28:54'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:28:54'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:28:54'!
PASSED!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:28:54'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:29:13'!
test09MarsRoverProcessRotateRightCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: east.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: south).! !

!testRun: #TestMarsRover #test09MarsRoverProcessRotateRightCommandWhenFacingEast stamp: 'LR 10/8/2023 20:29:14'!
ERROR!

!testRun: #TestMarsRover #test09MarsRoverProcessRotateRightCommandWhenFacingEast stamp: 'LR 10/8/2023 20:29:14'!
ERROR!
!East methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:29:22' overrides: 50652855!
rotateRight
	self shouldBeImplemented.! !
!East methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:29:47' prior: 50653257 overrides: 50652855!
rotateRight
	^Orientation south! !

!testRun: #TestMarsRover #test09MarsRoverProcessRotateRightCommandWhenFacingEast stamp: 'LR 10/8/2023 20:29:49'!
PASSED!

!testRun: #TestMarsRover #test09MarsRoverProcessRotateRightCommandWhenFacingEast stamp: 'LR 10/8/2023 20:29:50'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:30:07'!
test10MarsRoverProcessRotateRightCommandWhenFacingSouth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: south.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: west).! !

!testRun: #TestMarsRover #test10MarsRoverProcessRotateRightCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:30:09'!
ERROR!

!testRun: #TestMarsRover #test10MarsRoverProcessRotateRightCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:30:09'!
ERROR!
!South methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:30:13' overrides: 50652855!
rotateRight
	self shouldBeImplemented.! !
!South methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:30:19' prior: 50653292 overrides: 50652855!
rotateRight
	^Orientation west! !

!testRun: #TestMarsRover #test10MarsRoverProcessRotateRightCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:30:20'!
PASSED!

!testRun: #TestMarsRover #test10MarsRoverProcessRotateRightCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:30:21'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:30:31'!
test11MarsRoverProcessRotateRightCommandWhenFacingWest
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: west.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !

!testRun: #TestMarsRover #test11MarsRoverProcessRotateRightCommandWhenFacingWest stamp: 'LR 10/8/2023 20:30:33'!
ERROR!

!testRun: #TestMarsRover #test11MarsRoverProcessRotateRightCommandWhenFacingWest stamp: 'LR 10/8/2023 20:30:33'!
ERROR!
!West methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:30:38' overrides: 50652855!
rotateRight
	self shouldBeImplemented.! !
!West methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:30:43' prior: 50653326 overrides: 50652855!
rotateRight
	^Orientation north! !

!testRun: #TestMarsRover #test11MarsRoverProcessRotateRightCommandWhenFacingWest stamp: 'LR 10/8/2023 20:30:44'!
PASSED!

!testRun: #TestMarsRover #test11MarsRoverProcessRotateRightCommandWhenFacingWest stamp: 'LR 10/8/2023 20:30:45'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'LR 10/8/2023 20:32:27'!
test12MarsRoverProcessManyCommands
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: west.
	marsRover processCommand: 'rf'.
	
	self assert: (marsRover isAt: 0@1 facing: north).! !

!testRun: #TestMarsRover #test12MarsRoverProcessManyCommands stamp: 'LR 10/8/2023 20:32:33'!
FAILURE!

!testRun: #TestMarsRover #test12MarsRoverProcessManyCommands stamp: 'LR 10/8/2023 20:32:33'!
FAILURE!

----End fileIn of /Users/lucas.rango/workspace/cuisUniversity/Packages/TerseGuide.pck.st----!
!MarsRover methodsFor: 'processing' stamp: 'LR 10/8/2023 20:38:13' prior: 50652680!
processCommand: aCommand
	aCommand do: [ :command |
		(MarsRoverCommand commandParse: aCommand) isSentTo: self.
	]
	! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:38:16'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:38:16'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:38:16'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:38:16'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:38:16'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:38:16'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:38:16'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:38:16'!
PASSED!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:38:16'!
PASSED!

!testRun: #TestMarsRover #test09MarsRoverProcessRotateRightCommandWhenFacingEast stamp: 'LR 10/8/2023 20:38:16'!
PASSED!

!testRun: #TestMarsRover #test10MarsRoverProcessRotateRightCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:38:16'!
PASSED!

!testRun: #TestMarsRover #test11MarsRoverProcessRotateRightCommandWhenFacingWest stamp: 'LR 10/8/2023 20:38:16'!
PASSED!

!testRun: #TestMarsRover #test12MarsRoverProcessManyCommands stamp: 'LR 10/8/2023 20:38:16'!
FAILURE!

!testRun: #TestMarsRover #test12MarsRoverProcessManyCommands stamp: 'LR 10/8/2023 20:38:16'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'LR 10/8/2023 20:39:18' prior: 50656278!
processCommand: aCommand
	aCommand do: [ :command |
		(MarsRoverCommand commandParse: command) isSentTo: self.
	]
	! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:39:20'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:39:20'!
FAILURE!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:39:20'!
FAILURE!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:39:20'!
FAILURE!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:39:20'!
FAILURE!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:39:20'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:39:20'!
FAILURE!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:39:20'!
FAILURE!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:39:20'!
FAILURE!

!testRun: #TestMarsRover #test09MarsRoverProcessRotateRightCommandWhenFacingEast stamp: 'LR 10/8/2023 20:39:20'!
FAILURE!

!testRun: #TestMarsRover #test10MarsRoverProcessRotateRightCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:39:20'!
FAILURE!

!testRun: #TestMarsRover #test11MarsRoverProcessRotateRightCommandWhenFacingWest stamp: 'LR 10/8/2023 20:39:20'!
FAILURE!

!testRun: #TestMarsRover #test12MarsRoverProcessManyCommands stamp: 'LR 10/8/2023 20:39:20'!
FAILURE!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:39:30'!
FAILURE!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:39:30'!
FAILURE!
!MarsRover methodsFor: 'processing' stamp: 'LR 10/8/2023 20:40:42' prior: 50656335!
processCommand: aCommand
	(MarsRoverCommand commandParse: aCommand) isSentTo: self.
	! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'LR 10/8/2023 20:40:45'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'LR 10/8/2023 20:40:45'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'LR 10/8/2023 20:40:45'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:40:45'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'LR 10/8/2023 20:40:45'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'LR 10/8/2023 20:40:45'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:40:45'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'LR 10/8/2023 20:40:45'!
PASSED!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'LR 10/8/2023 20:40:45'!
PASSED!

!testRun: #TestMarsRover #test09MarsRoverProcessRotateRightCommandWhenFacingEast stamp: 'LR 10/8/2023 20:40:45'!
PASSED!

!testRun: #TestMarsRover #test10MarsRoverProcessRotateRightCommandWhenFacingSouth stamp: 'LR 10/8/2023 20:40:45'!
PASSED!

!testRun: #TestMarsRover #test11MarsRoverProcessRotateRightCommandWhenFacingWest stamp: 'LR 10/8/2023 20:40:45'!
PASSED!

!testRun: #TestMarsRover #test12MarsRoverProcessManyCommands stamp: 'LR 10/8/2023 20:40:45'!
FAILURE!

!testRun: #TestMarsRover #test12MarsRoverProcessManyCommands stamp: 'LR 10/8/2023 20:40:45'!
FAILURE!

----STARTUP---- (8 October 2023 23:17:33) as /home/bruno/Downloads/linux64(2)/linux64/CuisUniversity-5981.image!


----End fileIn of /home/bruno/Downloads/linux64(2)/linux64/MarsRoverExercise.st----!

!classRemoval: #West stamp: 'BR 10/8/2023 23:20:14'!
Orientation subclass: #West
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #South stamp: 'BR 10/8/2023 23:20:14'!
Orientation subclass: #South
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #North stamp: 'BR 10/8/2023 23:20:15'!
Orientation subclass: #North
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #East stamp: 'BR 10/8/2023 23:20:15'!
Orientation subclass: #East
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #Orientation stamp: 'BR 10/8/2023 23:20:15'!
Object subclass: #Orientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #RotateRightCommand stamp: 'BR 10/8/2023 23:20:15'!
MarsRoverCommand subclass: #RotateRightCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #RotateLeftCommand stamp: 'BR 10/8/2023 23:20:15'!
MarsRoverCommand subclass: #RotateLeftCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #MoveForwardsCommand stamp: 'BR 10/8/2023 23:20:15'!
MarsRoverCommand subclass: #MoveForwardsCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #MoveBackwardsCommand stamp: 'BR 10/8/2023 23:20:15'!
MarsRoverCommand subclass: #MoveBackwardsCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #CommandNotRecognized stamp: 'BR 10/8/2023 23:20:15'!
MarsRoverCommand subclass: #CommandNotRecognized
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #MarsRoverCommand stamp: 'BR 10/8/2023 23:20:15'!
Object subclass: #MarsRoverCommand
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #MarsRover stamp: 'BR 10/8/2023 23:20:15'!
Object subclass: #MarsRover
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #CommandRight stamp: 'BR 10/8/2023 23:20:16'!
CommandBase subclass: #CommandRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #CommandLeft stamp: 'BR 10/8/2023 23:20:16'!
CommandBase subclass: #CommandLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #CommandForward stamp: 'BR 10/8/2023 23:20:16'!
CommandBase subclass: #CommandForward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #CommandBackward stamp: 'BR 10/8/2023 23:20:16'!
CommandBase subclass: #CommandBackward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #CommandBase stamp: 'BR 10/8/2023 23:20:16'!
Object subclass: #CommandBase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #TestMarsRover stamp: 'BR 10/8/2023 23:20:16'!
TestCase subclass: #TestMarsRover
	instanceVariableNames: 'north south west east'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

----End fileIn of /home/bruno/Downloads/linux64(2)/linux64/MarsRoverExercise.st----!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:22:14'!
test08MarsRoverProcessRotateRightCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: east).! !

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'BR 10/8/2023 23:22:27'!
ERROR!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'BR 10/8/2023 23:22:27'!
ERROR!
!North methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:22:40' overrides: 50657286!
rotateRight
	^Orientation east! !

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'BR 10/8/2023 23:22:46'!
ERROR!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'BR 10/8/2023 23:22:46'!
ERROR!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'BR 10/8/2023 23:22:58'!
ERROR!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'BR 10/8/2023 23:22:58'!
ERROR!
!MarsRover methodsFor: 'movement' stamp: 'BR 10/8/2023 23:23:28'!
rotateRight
	facing := facing rotateRight! !

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'BR 10/8/2023 23:23:32'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:23:57'!
test09MarsRoverProcessRotateRightCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: east.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: south).! !

!testRun: #TestMarsRover #test09MarsRoverProcessRotateRightCommandWhenFacingEast stamp: 'BR 10/8/2023 23:23:59'!
ERROR!

!testRun: #TestMarsRover #test09MarsRoverProcessRotateRightCommandWhenFacingEast stamp: 'BR 10/8/2023 23:23:59'!
ERROR!
!East methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:24:12' overrides: 50657286!
rotateRight
	^Orientation south! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 23:24:15'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'BR 10/8/2023 23:24:15'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'BR 10/8/2023 23:24:15'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'BR 10/8/2023 23:24:15'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'BR 10/8/2023 23:24:15'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'BR 10/8/2023 23:24:15'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'BR 10/8/2023 23:24:15'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'BR 10/8/2023 23:24:15'!
PASSED!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'BR 10/8/2023 23:24:15'!
PASSED!

!testRun: #TestMarsRover #test09MarsRoverProcessRotateRightCommandWhenFacingEast stamp: 'BR 10/8/2023 23:24:15'!
PASSED!
!South methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:24:35' overrides: 50657286!
rotateRight
	^Orientation west! !
!West methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:24:49' overrides: 50657286!
rotateRight
	^Orientation north! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 23:24:51'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'BR 10/8/2023 23:24:51'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'BR 10/8/2023 23:24:51'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'BR 10/8/2023 23:24:51'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'BR 10/8/2023 23:24:51'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'BR 10/8/2023 23:24:51'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'BR 10/8/2023 23:24:51'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'BR 10/8/2023 23:24:51'!
PASSED!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'BR 10/8/2023 23:24:51'!
PASSED!

!testRun: #TestMarsRover #test09MarsRoverProcessRotateRightCommandWhenFacingEast stamp: 'BR 10/8/2023 23:24:51'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:25:23'!
test10MarsRoverProcessRotateRightCommandWhenFacingSouth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: south.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: west).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:25:38'!
test11MarsRoverProcessRotateRightCommandWhenFacingWest
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: south.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: west).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:25:46' prior: 50657556!
test11MarsRoverProcessRotateRightCommandWhenFacingWest
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: west.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !

!testRun: #TestMarsRover #test01MarsRoverProcessEmptyCommand stamp: 'BR 10/8/2023 23:25:50'!
PASSED!

!testRun: #TestMarsRover #test02MarsRoverProcessMoveForwardsCommand stamp: 'BR 10/8/2023 23:25:50'!
PASSED!

!testRun: #TestMarsRover #test03MarsRoverProcessMoveBackwardsCommand stamp: 'BR 10/8/2023 23:25:50'!
PASSED!

!testRun: #TestMarsRover #test04MarsRoverProcessRotateLeftCommandWhenFacingNorth stamp: 'BR 10/8/2023 23:25:50'!
PASSED!

!testRun: #TestMarsRover #test05MarsRoverProcessRotateLeftCommandWhenFacingWest stamp: 'BR 10/8/2023 23:25:50'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessErroneousCommand stamp: 'BR 10/8/2023 23:25:50'!
PASSED!

!testRun: #TestMarsRover #test06MarsRoverProcessRotateLeftCommandWhenFacingSouth stamp: 'BR 10/8/2023 23:25:50'!
PASSED!

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'BR 10/8/2023 23:25:50'!
PASSED!

!testRun: #TestMarsRover #test08MarsRoverProcessRotateRightCommandWhenFacingNorth stamp: 'BR 10/8/2023 23:25:50'!
PASSED!

!testRun: #TestMarsRover #test09MarsRoverProcessRotateRightCommandWhenFacingEast stamp: 'BR 10/8/2023 23:25:50'!
PASSED!

!testRun: #TestMarsRover #test10MarsRoverProcessRotateRightCommandWhenFacingSouth stamp: 'BR 10/8/2023 23:25:50'!
PASSED!

!testRun: #TestMarsRover #test11MarsRoverProcessRotateRightCommandWhenFacingWest stamp: 'BR 10/8/2023 23:25:50'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:31:34'!
test12MarsRoverProcessManyValidCommands
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'rbl'.
	
	self assert: (marsRover isAt: 0@-1 facing: north).! !

!testRun: #TestMarsRover #test12MarsRoverProcessManyValidCommands stamp: 'BR 10/8/2023 23:31:37'!
FAILURE!

!testRun: #TestMarsRover #test12MarsRoverProcessManyValidCommands stamp: 'BR 10/8/2023 23:31:37'!
FAILURE!

----End fileIn of /home/bruno/Downloads/linux64(2)/linux64/Packages/TerseGuide.pck.st----!

marsRover := MarsRover deployAt: 0@0 facing: north.!

marsRover := MarsRover deployAt: 0@0 facing: north.!

marsRover := MarsRover deployAt: 0@0 facing: north.!

x := 'rbl'!

x := 'rbl'!

x do: [:a | marsRover processCommand: a]!

marsRover!

marsRover position!

marsRover position!

marsRover isAt: 0@-1 facing: north!

marsRover isAt: -1@0 facing: north !

marsRover isAt: 0@-1 facing: north !

marsRover position!

marsRover!

marsRover := MarsRover deployAt: 0@0 facing: north!

marsRover := MarsRover deployAt: 0@0 facing: north!

marsRover := MarsRover deployAt: 0@0 facing: north!

marsRover!

north := Orientation north.!

marsRover := MarsRover deployAt: 0@0 facing: north.!

marsRover!

x := 'rbl'.!

x do: [:a | marsRover processCommand: a]!

marsRover!

x do: [:a | marsRover processCommand: a]!

x do: [:a | marsRover processCommand: a]!

x do: [:a | marsRover processCommand: a]!

marsRover!

x do: [:a | marsRover processCommand: a]!

x do: [:a | marsRover processCommand: a.].!

marsRover!

x do: [:a | marsRover processCommand: a.]!

x do: [:a| marsRover processCommand: (a asString).]!

x do: [:a| marsRover processCommand: (a asString).]!

marsRover!
!MarsRover methodsFor: 'processing' stamp: 'BR 10/8/2023 23:47:54'!
processStringOfCommands: aStringOfCommands
	
	aStringOfCommands do: [:command| self processCommand: (command asString).].
	! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:48:34' prior: 50657619!
test12MarsRoverProcessManyValidCommands
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processStringOfCommands: 'rbl'.
	
	self assert: (marsRover isAt: 0@-1 facing: north).! !

!testRun: #TestMarsRover #test12MarsRoverProcessManyValidCommands stamp: 'BR 10/8/2023 23:48:37'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:48:57' prior: 50660598!
test12MarsRoverProcessManyValidCommands
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processStringOfCommands: 'rbl'.
	
	self assert: (marsRover isAt: -1@0 facing: north).! !

!testRun: #TestMarsRover #test12MarsRoverProcessManyValidCommands stamp: 'BR 10/8/2023 23:48:59'!
FAILURE!

!testRun: #TestMarsRover #test12MarsRoverProcessManyValidCommands stamp: 'BR 10/8/2023 23:48:59'!
FAILURE!
!MarsRover methodsFor: 'movement' stamp: 'BR 10/8/2023 23:55:09' prior: 50657116!
moveBackwards
	^facing movesMarsRoverBackwards: self.! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/8/2023 23:55:42' prior: 50657120!
moveForwards
	^facing movesMarsRoverForwards: self.! !
!Orientation methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:56:19'!
movesMarsRoverForwards: aMarsRover
	^self subclassResponsibility.! !
!Orientation methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:56:25'!
movesMarsRoverBackwards: aMarsRover
	^self subclassResponsibility.! !
!East methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:56:29' overrides: 50660642!
movesMarsRoverBackwards: aMarsRover
	^self subclassResponsibility.! !
!North methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:56:29' overrides: 50660642!
movesMarsRoverBackwards: aMarsRover
	^self subclassResponsibility.! !
!South methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:56:29' overrides: 50660642!
movesMarsRoverBackwards: aMarsRover
	^self subclassResponsibility.! !
!West methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:56:29' overrides: 50660642!
movesMarsRoverBackwards: aMarsRover
	^self subclassResponsibility.! !
!Orientation methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:56:29' prior: 50660642!
movesMarsRoverBackwards: aMarsRover

	self subclassResponsibility! !
!East methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:56:37' overrides: 50660637!
movesMarsRoverForwards: aMarsRover
	^self subclassResponsibility.! !
!North methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:56:37' overrides: 50660637!
movesMarsRoverForwards: aMarsRover
	^self subclassResponsibility.! !
!South methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:56:37' overrides: 50660637!
movesMarsRoverForwards: aMarsRover
	^self subclassResponsibility.! !
!West methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:56:37' overrides: 50660637!
movesMarsRoverForwards: aMarsRover
	^self subclassResponsibility.! !
!Orientation methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:56:37' prior: 50660637!
movesMarsRoverForwards: aMarsRover

	self subclassResponsibility! !
!East methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:57:42' prior: 50660648 overrides: 50660672!
movesMarsRoverBackwards: aMarsRover
	^aMarsRover movesBackwardsWhileFacingEast.! !
!East methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:57:59' prior: 50660678 overrides: 50660702!
movesMarsRoverForwards: aMarsRover
	^aMarsRover movesForwardsWhileFacingEast.! !
!North methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:58:33' prior: 50660654 overrides: 50660672!
movesMarsRoverBackwards: aMarsRover
	^aMarsRover movesBackwardsWhileFacingNorth.! !
!North methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:58:52' prior: 50660684 overrides: 50660702!
movesMarsRoverForwards: aMarsRover
	^aMarsRover movesForwardsWhileFacingNorth.! !
!South methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:59:09' prior: 50660660 overrides: 50660672!
movesMarsRoverBackwards: aMarsRover
	^aMarsRover movesBackwardsWhileFacingSouth.! !
!South methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:59:26' prior: 50660690 overrides: 50660702!
movesMarsRoverForwards: aMarsRover
	^aMarsRover movesForwardsWhileFacingSouth.! !
!West methodsFor: 'as yet unclassified' stamp: 'BR 10/8/2023 23:59:44' prior: 50660696 overrides: 50660702!
movesMarsRoverForwards: aMarsRover
	^aMarsRover movesForwardsWhileFacingWest.! !
!West methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:00:02' prior: 50660666 overrides: 50660672!
movesMarsRoverBackwards: aMarsRover
	^aMarsRover movesBackwardsWhileFacingWest.! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/9/2023 00:00:38'!
moveBackwardsWhileFacingNorth
	^facing movesMarsRoverBackwards: self.! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/9/2023 00:01:07' prior: 50660757!
moveBackwardsWhileFacingNorth
	position := position + (0@-1).! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/9/2023 00:01:51'!
movesBackwardsWhileFacingNorth
	position := position + (0@-1).! !

!methodRemoval: MarsRover #moveBackwardsWhileFacingNorth stamp: 'BR 10/9/2023 00:01:58'!
moveBackwardsWhileFacingNorth
	position := position + (0@-1).!
!MarsRover methodsFor: 'movement' stamp: 'BR 10/9/2023 00:02:16'!
movesForwardsWhileFacingNorth
	position := position + (0@1).! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/9/2023 00:02:27'!
movesForwardsWhileFacingWest
	position := position + (0@1).! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/9/2023 00:02:43' prior: 50660781!
movesForwardsWhileFacingWest
	position := position + (-1@0).! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/9/2023 00:02:58'!
movesBackwardsWhileFacingWest
	position := position + (-1@0).! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/9/2023 00:03:04' prior: 50660791!
movesBackwardsWhileFacingWest
	position := position + (1@0).! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/9/2023 00:03:18'!
movesBackwardsWhileFacingSouth
	position := position + (0@1).! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/9/2023 00:03:24'!
movesForwardsWhileFacingSouth
	position := position + (0@1).! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/9/2023 00:03:29' prior: 50660806!
movesForwardsWhileFacingSouth
	position := position + (0@-1).! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/9/2023 00:04:01'!
movesForwardsWhileFacingEast
	position := position + (1@0).! !
!MarsRover methodsFor: 'movement' stamp: 'BR 10/9/2023 00:04:16'!
movesBackwardsWhileFacingEast
	position := position + (-1@0).! !

!testRun: #TestMarsRover #test12MarsRoverProcessManyValidCommands stamp: 'BR 10/9/2023 00:04:31'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:06:11'!
test13MarsRoverProcessManyValidCommands
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processStringOfCommands: 'rblbrrff'.
	
	self assert: (marsRover isAt: -1@-3 facing: south).! !

!testRun: #TestMarsRover #test13MarsRoverProcessManyValidCommands stamp: 'BR 10/9/2023 00:06:13'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:06:35'!
test13MarsRoverProcessManyValidCommandsWithAnInvalidOne
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processStringOfCommands: 'rblbxrrff'.
	
	self assert: (marsRover isAt: -1@-3 facing: south).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:06:51'!
test14MarsRoverProcessManyValidCommandsWithAnInvalidOne
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processStringOfCommands: 'rblbxrrff'.
	
	self assert: (marsRover isAt: -1@-3 facing: south).! !

!methodRemoval: TestMarsRover #test13MarsRoverProcessManyValidCommandsWithAnInvalidOne stamp: 'BR 10/9/2023 00:06:51'!
test13MarsRoverProcessManyValidCommandsWithAnInvalidOne
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processStringOfCommands: 'rblbxrrff'.
	
	self assert: (marsRover isAt: -1@-3 facing: south).!

!testRun: #TestMarsRover #test14MarsRoverProcessManyValidCommandsWithAnInvalidOne stamp: 'BR 10/9/2023 00:06:55'!
PASSED!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:07:17' prior: 50660852!
test14MarsRoverProcessManyValidCommandsWithAnInvalidOne
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processStringOfCommands: 'rblbxrrff'.
	
	self assert: (marsRover isAt: -1@-1 facing: north).! !

!testRun: #TestMarsRover #test14MarsRoverProcessManyValidCommandsWithAnInvalidOne stamp: 'BR 10/9/2023 00:07:20'!
FAILURE!

!testRun: #TestMarsRover #test14MarsRoverProcessManyValidCommandsWithAnInvalidOne stamp: 'BR 10/9/2023 00:07:20'!
FAILURE!
!CommandNotRecognized methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:13:35' prior: 50657194 overrides: 50657154!
isSentTo: aMarsRover
	^self.! !

'f' in: #('f','a')!

'f' in: 'fa'!

'fa' includes: 'f'!

#('f' 'a') includes: 'f'!

#('f' 'a') includes: 'f'!

#('f' 'a') includes: 'p'!

[:a|(#('f' 'b' 'l' 'r') includes: a) whileTrue: [Transcript show: a printString; newLine]]!

[:a|(#('f' 'b' 'l' 'r') includes: a) whileTrue: [Transcript show: a printString; newLine.]].!

[:a|(#('f' 'b' 'l' 'r') includes: a) whileTrue: [Transcript show: a printString; newLine.]].!

[:a|(#('f' 'b' 'l' 'r') includes: a) whileTrue: [Transcript show: a printString; newLine.].].!

[:a|(#('f' 'b' 'l' 'r') includes: a) whileTrue: [a printString.].].!

[:a|(#('f' 'b' 'l' 'r') includes: a) whileTrue: [a printString.].].!

[:a|(#('f' 'b' 'l' 'r' 'u') includes: a) whileTrue: [a printString.].]!

[:a|(#('f' 'b' 'l' 'r' 'u') includes: a) whileTrue: [a printString.].]!

[:a|(#('f' 'b' 'l' 'r' 'u') includes: a) whileTrue: [a printString.].]!

[:a|(#('f' 'b' 'l' 'r' 'u') includes: a) whileTrue: [a printString.].]!

!classRenamed: #MarsRover as: #MarsRoverBase stamp: 'BR 10/9/2023 00:33:52'!
Smalltalk renameClassNamed: #MarsRover as: #MarsRoverBase!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50660611!
test12MarsRoverProcessManyValidCommands
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: north.
	marsRover processStringOfCommands: 'rbl'.
	
	self assert: (marsRover isAt: -1@0 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50657055!
test06MarsRoverProcessErroneousCommand
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: north.
	marsRover processCommand: 'x'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50657074!
test07MarsRoverProcessRotateLeftCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: east.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50657064!
test06MarsRoverProcessRotateLeftCommandWhenFacingSouth
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: south.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: east).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50660877!
test14MarsRoverProcessManyValidCommandsWithAnInvalidOne
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: north.
	marsRover processStringOfCommands: 'rblbxrrff'.
	
	self assert: (marsRover isAt: -1@-1 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50657045!
test05MarsRoverProcessRotateLeftCommandWhenFacingWest
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: west.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: south).! !
!MarsRoverBase class methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50657136!
deployAt: aPoint facing: aCardinalPoint
	^MarsRoverBase new with: aPoint facing: aCardinalPoint.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50657546!
test10MarsRoverProcessRotateRightCommandWhenFacingSouth
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: south.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: west).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50657399!
test08MarsRoverProcessRotateRightCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: north.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: east).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50657026!
test03MarsRoverProcessMoveBackwardsCommand
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: north.
	marsRover processCommand: 'b'.
	
	self assert: (marsRover isAt: 0@-1 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50657566!
test11MarsRoverProcessRotateRightCommandWhenFacingWest
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: west.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50657008!
test01MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: north.
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50657035!
test04MarsRoverProcessRotateLeftCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: north.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: west).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50657444!
test09MarsRoverProcessRotateRightCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: east.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: south).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50660829!
test13MarsRoverProcessManyValidCommands
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: north.
	marsRover processStringOfCommands: 'rblbrrff'.
	
	self assert: (marsRover isAt: -1@-3 facing: south).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:33:52' prior: 50657017!
test02MarsRoverProcessMoveForwardsCommand
	|marsRover|
	
	marsRover := MarsRoverBase deployAt: 0@0 facing: north.
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: north).! !

MarsRoverBase subclass: #MarsRoverOperational
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

MarsRoverBase subclass: #MarsRoverOperational
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #MarsRoverOperational category: 'MarsRoverExercise' stamp: 'BR 10/9/2023 00:35:03'!
MarsRoverBase subclass: #MarsRoverOperational
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

MarsRoverBase subclass: #MarsRoverOperational
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

Object subclass: #MarsRoverBase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #MarsRoverBase category: 'MarsRoverExercise' stamp: 'BR 10/9/2023 00:35:25'!
Object subclass: #MarsRoverBase
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

MarsRoverBase subclass: #MarsRoverOperational
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #MarsRoverOperational category: 'MarsRoverExercise' stamp: 'BR 10/9/2023 00:35:32'!
MarsRoverBase subclass: #MarsRoverOperational
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

MarsRoverBase subclass: #MarsRoverNonOperational
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #MarsRoverNonOperational category: 'MarsRoverExercise' stamp: 'BR 10/9/2023 00:35:42'!
MarsRoverBase subclass: #MarsRoverNonOperational
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!
!MarsRoverOperational methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:36:05' overrides: 50657096!
currentPosition
	^position.! !
!MarsRoverNonOperational methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:36:05' overrides: 50657096!
currentPosition
	^position.! !
!MarsRoverBase methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:36:05' prior: 50657096!
currentPosition

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:36:11' overrides: 50657100!
isAt: aPoint facing: aCardinalPoint
	^(position = aPoint) and: (facing = aCardinalPoint).! !
!MarsRoverNonOperational methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:36:11' overrides: 50657100!
isAt: aPoint facing: aCardinalPoint
	^(position = aPoint) and: (facing = aCardinalPoint).! !
!MarsRoverBase methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:36:11' prior: 50657100!
isAt: aPoint facing: aCardinalPoint

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:36:16' overrides: 50660627!
moveBackwards
	^facing movesMarsRoverBackwards: self.! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:36:16' overrides: 50660627!
moveBackwards
	^facing movesMarsRoverBackwards: self.! !
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 00:36:16' prior: 50660627!
moveBackwards

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:36:25' overrides: 50660632!
moveForwards
	^facing movesMarsRoverForwards: self.! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:36:25' overrides: 50660632!
moveForwards
	^facing movesMarsRoverForwards: self.! !
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 00:36:25' prior: 50660632!
moveForwards

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:36:51' overrides: 50660767!
movesBackwardsWhileFacingNorth
	position := position + (0@-1).! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:36:51' overrides: 50660767!
movesBackwardsWhileFacingNorth
	position := position + (0@-1).! !
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 00:36:51' prior: 50660767!
movesBackwardsWhileFacingNorth

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:37:04' overrides: 50660821!
movesBackwardsWhileFacingEast
	position := position + (-1@0).! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:37:04' overrides: 50660821!
movesBackwardsWhileFacingEast
	position := position + (-1@0).! !
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 00:37:04' prior: 50660821!
movesBackwardsWhileFacingEast

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:07' overrides: 50660801!
movesBackwardsWhileFacingSouth
	position := position + (0@1).! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:07' overrides: 50660801!
movesBackwardsWhileFacingSouth
	position := position + (0@1).! !
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:07' prior: 50660801!
movesBackwardsWhileFacingSouth

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:16' overrides: 50660796!
movesBackwardsWhileFacingWest
	position := position + (1@0).! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:16' overrides: 50660796!
movesBackwardsWhileFacingWest
	position := position + (1@0).! !
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:16' prior: 50660796!
movesBackwardsWhileFacingWest

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:38' overrides: 50660816!
movesForwardsWhileFacingEast
	position := position + (1@0).! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:38' overrides: 50660816!
movesForwardsWhileFacingEast
	position := position + (1@0).! !
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:38' prior: 50660816!
movesForwardsWhileFacingEast

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:45' overrides: 50660776!
movesForwardsWhileFacingNorth
	position := position + (0@1).! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:45' overrides: 50660776!
movesForwardsWhileFacingNorth
	position := position + (0@1).! !
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:45' prior: 50660776!
movesForwardsWhileFacingNorth

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:54' overrides: 50660811!
movesForwardsWhileFacingSouth
	position := position + (0@-1).! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:54' overrides: 50660811!
movesForwardsWhileFacingSouth
	position := position + (0@-1).! !
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 00:39:54' prior: 50660811!
movesForwardsWhileFacingSouth

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:40:02' overrides: 50660786!
movesForwardsWhileFacingWest
	position := position + (-1@0).! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:40:02' overrides: 50660786!
movesForwardsWhileFacingWest
	position := position + (-1@0).! !
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 00:40:02' prior: 50660786!
movesForwardsWhileFacingWest

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'processing' stamp: 'BR 10/9/2023 00:40:19' overrides: 50657111!
processCommand: aCommand
	
	(MarsRoverCommand commandParse: aCommand) isSentTo: self.
	! !
!MarsRoverNonOperational methodsFor: 'processing' stamp: 'BR 10/9/2023 00:40:19' overrides: 50657111!
processCommand: aCommand
	
	(MarsRoverCommand commandParse: aCommand) isSentTo: self.
	! !
!MarsRoverBase methodsFor: 'processing' stamp: 'BR 10/9/2023 00:40:19' prior: 50657111!
processCommand: aCommand

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'processing' stamp: 'BR 10/9/2023 00:40:30' overrides: 50660591!
processStringOfCommands: aStringOfCommands
	
	aStringOfCommands do: [:command| self processCommand: (command asString).].
	! !
!MarsRoverNonOperational methodsFor: 'processing' stamp: 'BR 10/9/2023 00:40:30' overrides: 50660591!
processStringOfCommands: aStringOfCommands
	
	aStringOfCommands do: [:command| self processCommand: (command asString).].
	! !
!MarsRoverBase methodsFor: 'processing' stamp: 'BR 10/9/2023 00:40:30' prior: 50660591!
processStringOfCommands: aStringOfCommands

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:40:41' overrides: 50657124!
rotateLeft
	facing := facing rotateLeft! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:40:41' overrides: 50657124!
rotateLeft
	facing := facing rotateLeft! !
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 00:40:41' prior: 50657124!
rotateLeft

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:40:50' overrides: 50657436!
rotateRight
	facing := facing rotateRight! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:40:50' overrides: 50657436!
rotateRight
	facing := facing rotateRight! !
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 00:40:50' prior: 50657436!
rotateRight

	self subclassResponsibility! !
!MarsRoverOperational methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:41:01' overrides: 50657106!
with: aPoint facing: aCardinalPoint
	position := aPoint.
	facing := aCardinalPoint.! !
!MarsRoverNonOperational methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:41:01' overrides: 50657106!
with: aPoint facing: aCardinalPoint
	position := aPoint.
	facing := aCardinalPoint.! !
!MarsRoverBase methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:41:01' prior: 50657106!
with: aPoint facing: aCardinalPoint

	self subclassResponsibility! !

!methodRemoval: MarsRoverOperational #currentPosition stamp: 'BR 10/9/2023 00:41:28'!
currentPosition
	^position.!

!methodRemoval: MarsRoverNonOperational #currentPosition stamp: 'BR 10/9/2023 00:41:38'!
currentPosition
	^position.!

!methodRemoval: MarsRoverBase #currentPosition stamp: 'BR 10/9/2023 00:41:40'!
currentPosition

	self subclassResponsibility!
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:41:52' prior: 50661192 overrides: 50661197!
moveBackwards
! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:42:28' prior: 50661207 overrides: 50661212!
moveForwards
! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:42:41' prior: 50661240 overrides: 50661245!
movesBackwardsWhileFacingEast
	! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:42:46' prior: 50661223 overrides: 50661228!
movesBackwardsWhileFacingNorth
	! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:42:51' prior: 50661256 overrides: 50661261!
movesBackwardsWhileFacingSouth
	! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:42:55' prior: 50661273 overrides: 50661278!
movesBackwardsWhileFacingWest
	! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:43:00' prior: 50661289 overrides: 50661294!
movesForwardsWhileFacingEast
	! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:43:04' prior: 50661305 overrides: 50661310!
movesForwardsWhileFacingNorth
	! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:43:09' prior: 50661321 overrides: 50661326!
movesForwardsWhileFacingSouth
	! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:43:13' prior: 50661337 overrides: 50661342!
movesForwardsWhileFacingWest
	! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:43:17' prior: 50661392 overrides: 50661397!
rotateLeft
	! !
!MarsRoverNonOperational methodsFor: 'movement' stamp: 'BR 10/9/2023 00:43:21' prior: 50661407 overrides: 50661412!
rotateRight
	! !
!MarsRoverBase class methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:44:17' prior: 50660995!
deployAt: aPoint facing: aCardinalPoint
	^MarsRoverOperational new with: aPoint facing: aCardinalPoint.! !
!CommandNotRecognized methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:48:52' prior: 50660896 overrides: 50657154!
isSentTo: aMarsRover
	
	aMarsRover ignoreSubsequentCommands.! !
!MarsRoverBase methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:49:18'!
ignoreSubsequentCommands

	self subclassResponsibility! !

Object subclass: #MarsRover
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #MarsRover category: 'MarsRoverExercise' stamp: 'BR 10/9/2023 00:59:02'!
Object subclass: #MarsRover
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #MarsRover stamp: 'BR 10/9/2023 00:59:12'!
Object subclass: #MarsRover
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRenamed: #MarsRoverOperational as: #MarsRover stamp: 'BR 10/9/2023 00:59:28'!
Smalltalk renameClassNamed: #MarsRoverOperational as: #MarsRover!
!MarsRoverBase class methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 00:59:28' prior: 50661507!
deployAt: aPoint facing: aCardinalPoint
	^MarsRover new with: aPoint facing: aCardinalPoint.! !

!classDefinition: #MarsRover category: 'MarsRoverExercise' stamp: 'BR 10/9/2023 01:00:59'!
MarsRoverBase subclass: #MarsRover
	instanceVariableNames: 'facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #MarsRoverNonOperational category: 'MarsRoverExercise' stamp: 'BR 10/9/2023 01:00:59'!
MarsRoverBase subclass: #MarsRoverNonOperational
	instanceVariableNames: 'facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #MarsRoverBase category: 'MarsRoverExercise' stamp: 'BR 10/9/2023 01:01:00'!
Object subclass: #MarsRoverBase
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #MarsRover category: 'MarsRoverExercise' stamp: 'BR 10/9/2023 01:01:00'!
MarsRoverBase subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #MarsRoverNonOperational category: 'MarsRoverExercise' stamp: 'BR 10/9/2023 01:01:00'!
MarsRoverBase subclass: #MarsRoverNonOperational
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classDefinition: #MarsRoverBase category: 'MarsRoverExercise' stamp: 'BR 10/9/2023 01:01:00'!
Object subclass: #MarsRoverBase
	instanceVariableNames: 'position facing'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!
!MarsRoverBase methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:01:00' prior: 50661181!
isAt: aPoint facing: aCardinalPoint
	^(position = aPoint) and: (facing = aCardinalPoint).! !

!methodRemoval: MarsRover #isAt:facing: stamp: 'BR 10/9/2023 01:01:00'!
isAt: aPoint facing: aCardinalPoint
	^(position = aPoint) and: (facing = aCardinalPoint).!

!methodRemoval: MarsRoverNonOperational #isAt:facing: stamp: 'BR 10/9/2023 01:01:00'!
isAt: aPoint facing: aCardinalPoint
	^(position = aPoint) and: (facing = aCardinalPoint).!
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 01:01:14' prior: 50661197!
moveBackwards
	^facing movesMarsRoverBackwards: self.! !

!methodRemoval: MarsRover #moveBackwards stamp: 'BR 10/9/2023 01:01:14'!
moveBackwards
	^facing movesMarsRoverBackwards: self.!
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 01:01:28' prior: 50661212!
moveForwards
	^facing movesMarsRoverForwards: self.! !

!methodRemoval: MarsRover #moveForwards stamp: 'BR 10/9/2023 01:01:28'!
moveForwards
	^facing movesMarsRoverForwards: self.!
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 01:01:32' prior: 50661245!
movesBackwardsWhileFacingEast
	position := position + (-1@0).! !

!methodRemoval: MarsRover #movesBackwardsWhileFacingEast stamp: 'BR 10/9/2023 01:01:32'!
movesBackwardsWhileFacingEast
	position := position + (-1@0).!
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 01:01:36' prior: 50661228!
movesBackwardsWhileFacingNorth
	position := position + (0@-1).! !

!methodRemoval: MarsRover #movesBackwardsWhileFacingNorth stamp: 'BR 10/9/2023 01:01:36'!
movesBackwardsWhileFacingNorth
	position := position + (0@-1).!
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 01:01:39' prior: 50661261!
movesBackwardsWhileFacingSouth
	position := position + (0@1).! !

!methodRemoval: MarsRover #movesBackwardsWhileFacingSouth stamp: 'BR 10/9/2023 01:01:39'!
movesBackwardsWhileFacingSouth
	position := position + (0@1).!
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 01:01:43' prior: 50661278!
movesBackwardsWhileFacingWest
	position := position + (1@0).! !

!methodRemoval: MarsRover #movesBackwardsWhileFacingWest stamp: 'BR 10/9/2023 01:01:43'!
movesBackwardsWhileFacingWest
	position := position + (1@0).!
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 01:01:48' prior: 50661294!
movesForwardsWhileFacingEast
	position := position + (1@0).! !

!methodRemoval: MarsRover #movesForwardsWhileFacingEast stamp: 'BR 10/9/2023 01:01:48'!
movesForwardsWhileFacingEast
	position := position + (1@0).!
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 01:01:51' prior: 50661310!
movesForwardsWhileFacingNorth
	position := position + (0@1).! !

!methodRemoval: MarsRover #movesForwardsWhileFacingNorth stamp: 'BR 10/9/2023 01:01:51'!
movesForwardsWhileFacingNorth
	position := position + (0@1).!
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 01:01:55' prior: 50661326!
movesForwardsWhileFacingSouth
	position := position + (0@-1).! !

!methodRemoval: MarsRover #movesForwardsWhileFacingSouth stamp: 'BR 10/9/2023 01:01:55'!
movesForwardsWhileFacingSouth
	position := position + (0@-1).!
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 01:01:58' prior: 50661342!
movesForwardsWhileFacingWest
	position := position + (-1@0).! !

!methodRemoval: MarsRover #movesForwardsWhileFacingWest stamp: 'BR 10/9/2023 01:01:58'!
movesForwardsWhileFacingWest
	position := position + (-1@0).!
!MarsRoverBase methodsFor: 'processing' stamp: 'BR 10/9/2023 01:02:07' prior: 50661361!
processCommand: aCommand
	
	(MarsRoverCommand commandParse: aCommand) isSentTo: self.
	! !

!methodRemoval: MarsRover #processCommand: stamp: 'BR 10/9/2023 01:02:07'!
processCommand: aCommand
	
	(MarsRoverCommand commandParse: aCommand) isSentTo: self.
	!

!methodRemoval: MarsRoverNonOperational #processCommand: stamp: 'BR 10/9/2023 01:02:07'!
processCommand: aCommand
	
	(MarsRoverCommand commandParse: aCommand) isSentTo: self.
	!
!MarsRoverBase methodsFor: 'processing' stamp: 'BR 10/9/2023 01:02:17' prior: 50661381!
processStringOfCommands: aStringOfCommands
	
	aStringOfCommands do: [:command| self processCommand: (command asString).].
	! !

!methodRemoval: MarsRover #processStringOfCommands: stamp: 'BR 10/9/2023 01:02:17'!
processStringOfCommands: aStringOfCommands
	
	aStringOfCommands do: [:command| self processCommand: (command asString).].
	!

!methodRemoval: MarsRoverNonOperational #processStringOfCommands: stamp: 'BR 10/9/2023 01:02:17'!
processStringOfCommands: aStringOfCommands
	
	aStringOfCommands do: [:command| self processCommand: (command asString).].
	!
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 01:02:21' prior: 50661397!
rotateLeft
	facing := facing rotateLeft! !

!methodRemoval: MarsRover #rotateLeft stamp: 'BR 10/9/2023 01:02:21'!
rotateLeft
	facing := facing rotateLeft!
!MarsRoverBase methodsFor: 'movement' stamp: 'BR 10/9/2023 01:02:24' prior: 50661412!
rotateRight
	facing := facing rotateRight! !

!methodRemoval: MarsRover #rotateRight stamp: 'BR 10/9/2023 01:02:24'!
rotateRight
	facing := facing rotateRight!
!MarsRoverBase methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:02:29' prior: 50661430!
with: aPoint facing: aCardinalPoint
	position := aPoint.
	facing := aCardinalPoint.! !

!methodRemoval: MarsRover #with:facing: stamp: 'BR 10/9/2023 01:02:29'!
with: aPoint facing: aCardinalPoint
	position := aPoint.
	facing := aCardinalPoint.!

!methodRemoval: MarsRoverNonOperational #with:facing: stamp: 'BR 10/9/2023 01:02:29'!
with: aPoint facing: aCardinalPoint
	position := aPoint.
	facing := aCardinalPoint.!

!methodRemoval: MarsRoverBase #ignoreSubsequentCommands stamp: 'BR 10/9/2023 01:02:37'!
ignoreSubsequentCommands

	self subclassResponsibility!
!MarsRoverBase class methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:23' prior: 50661549!
deployAt: aPoint facing: aCardinalPoint
	^MarsRoverBase new with: aPoint facing: aCardinalPoint.! !

!classRemoval: #MarsRover stamp: 'BR 10/9/2023 01:03:36'!
MarsRoverBase subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRemoval: #MarsRoverNonOperational stamp: 'BR 10/9/2023 01:03:39'!
MarsRoverBase subclass: #MarsRoverNonOperational
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRoverExercise'!

!classRenamed: #MarsRoverBase as: #MarsRover stamp: 'BR 10/9/2023 01:03:45'!
Smalltalk renameClassNamed: #MarsRoverBase as: #MarsRover!
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50660934!
test12MarsRoverProcessManyValidCommands
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processStringOfCommands: 'rbl'.
	
	self assert: (marsRover isAt: -1@0 facing: north).! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50661793!
deployAt: aPoint facing: aCardinalPoint
	^MarsRover new with: aPoint facing: aCardinalPoint.! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50660944!
test06MarsRoverProcessErroneousCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'x'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50660954!
test07MarsRoverProcessRotateLeftCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: east.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50660964!
test06MarsRoverProcessRotateLeftCommandWhenFacingSouth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: south.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: east).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50660974!
test14MarsRoverProcessManyValidCommandsWithAnInvalidOne
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processStringOfCommands: 'rblbxrrff'.
	
	self assert: (marsRover isAt: -1@-1 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50660985!
test05MarsRoverProcessRotateLeftCommandWhenFacingWest
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: west.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: south).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50661002!
test10MarsRoverProcessRotateRightCommandWhenFacingSouth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: south.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: west).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50661012!
test08MarsRoverProcessRotateRightCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: east).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50661022!
test03MarsRoverProcessMoveBackwardsCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'b'.
	
	self assert: (marsRover isAt: 0@-1 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50661032!
test11MarsRoverProcessRotateRightCommandWhenFacingWest
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: west.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50661042!
test01MarsRoverProcessEmptyCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: ''.
	
	self assert: (marsRover isAt: 0@0 facing: north).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50661052!
test04MarsRoverProcessRotateLeftCommandWhenFacingNorth
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'l'.
	
	self assert: (marsRover isAt: 0@0 facing: west).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50661062!
test09MarsRoverProcessRotateRightCommandWhenFacingEast
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: east.
	marsRover processCommand: 'r'.
	
	self assert: (marsRover isAt: 0@0 facing: south).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50661072!
test13MarsRoverProcessManyValidCommands
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processStringOfCommands: 'rblbrrff'.
	
	self assert: (marsRover isAt: -1@-3 facing: south).! !
!TestMarsRover methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:03:46' prior: 50661082!
test02MarsRoverProcessMoveForwardsCommand
	|marsRover|
	
	marsRover := MarsRover deployAt: 0@0 facing: north.
	marsRover processCommand: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: north).! !

x = #('uno' 'dos')!

x at: 0!

x at: 1!

x at: 2!

x = #('uno' 'dos')!

#('uno' 'dos')!

#('uno' 'dos')!
!CommandNotRecognized methodsFor: 'as yet unclassified' stamp: 'BR 10/9/2023 01:14:49' prior: 50661515 overrides: 50657154!
isSentTo: aMarsRover
	
	self.! !

!testRun: #TestMarsRover #test07MarsRoverProcessRotateLeftCommandWhenFacingEast stamp: 'BR 10/9/2023 01:14:55'!
PASSED!

!testRun: #TestMarsRover #test13MarsRoverProcessManyValidCommands stamp: 'BR 10/9/2023 01:14:59'!
PASSED!

'uno' at: 1!
!MarsRover methodsFor: 'processing' stamp: 'BR 10/9/2023 01:25:08' prior: 50661734!
processStringOfCommands: aStringOfCommands
	|index|
	
	index := 1.
	
	[#('f' 'b' 'l' 'r') includes: ((aStringOfCommands at: index) asString)] whileTrue:[
							self processCommand: ((aStringOfCommands at: index) asString).
							index := index + 1.
							].
	aStringOfCommands do: [:command| self processCommand: (command asString).].
	! !
!MarsRover methodsFor: 'processing' stamp: 'BR 10/9/2023 01:25:18' prior: 50661990!
processStringOfCommands: aStringOfCommands
	|index|
	
	index := 1.
	
	[#('f' 'b' 'l' 'r') includes: ((aStringOfCommands at: index) asString)] whileTrue:[
							self processCommand: ((aStringOfCommands at: index) asString).
							index := index + 1.
							].
	! !

!testRun: #TestMarsRover #test14MarsRoverProcessManyValidCommandsWithAnInvalidOne stamp: 'BR 10/9/2023 01:25:25'!
PASSED!

----QUIT----(9 October 2023 01:26:35) CuisUniversity-5981.image priorSource: 10217303!